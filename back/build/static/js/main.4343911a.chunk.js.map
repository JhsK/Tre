{"version":3,"sources":["hooks/useInput.js","reducers/user.js","components/LoginComponents.js","components/LoginLayout.js","components/JoinComponents.js","components/JoinLayout.js","pages/join.js","pages/login.js","pages/passwordFind.js","components/MenuComponents.js","reducers/plan.js","components/ScheduleList/styles.js","components/ScheduleList/index.js","components/style/theme.js","components/FuturePlanComponent.js","components/PastPlanComponent.js","components/ScheduleLayout.js","components/PublicBtn.js","pages/schedule.js","components/PlanListComponent.js","components/FullCalendar.js","pages/calendar.js","reducers/post.js","components/ImagesZoom/styles.js","components/ImagesZoom/index.js","components/PostImages.js","components/MemoryLayout.js","pages/memory.js","components/MemoryWriteComponent.js","pages/write.js","components/DetailPostImages.js","components/DetailComponent.js","pages/detail.js","components/PlanUpdateLayout.js","pages/planUpdate.js","components/InfoLayout.js","pages/info.js","App.js","reportWebVitals.js","reducers/menu.js","reducers/index.js","sagas/user.js","sagas/post.js","sagas/plan.js","sagas/index.js","index.js"],"names":["initValue","useState","value","setter","handler","useCallback","e","target","initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","nickChangeLoading","nickChangeDone","nickChangeError","emailChangeLoading","emailChangeDone","emailChangeError","loadMyInfoLoading","loadMyInfoDone","loadMyInfoError","user","Posts","id","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","NICK_CHANGE_REQUEST","NICK_CHANGE_SUCCESS","NICK_CHANGE_FAILURE","EMAIL_CHANGE_REQUEST","EMAIL_CHANGE_SUCCESS","EMAIL_CHANGE_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","logoutRequestAction","type","state","action","produce","draft","data","error","nickname","email","unshift","filter","v","KakaoBtn","styled","a","LoginComponents","dispatch","useDispatch","history","useHistory","useSelector","useInput","username","onChangeUsername","password","onChangePassword","useEffect","replace","alert","onSubmitLogin","src","alt","style","width","name","className","initialValues","remember","onFinish","Item","rules","required","message","prefix","UserOutlined","placeholder","onChange","LockOutlined","onClick","htmlType","loading","to","href","TaggedPosition","div","LoginLayout","JoinComponents","onChangeNickname","onChangeEmail","push","onSubmitJoin","MailOutlined","dependencies","hasFeedback","getFieldValue","validator","_","Promise","reject","Error","resolve","JoinLayout","join","login","passwordFind","SubMenu","Menu","LogoImg","img","MenuStyled","MenuComponents","pathURL","location","pathname","onClickedLogout","height","defaultSelectedKeys","mode","theme","indexOf","icon","ScheduleOutlined","fontSize","marginBottom","CalendarOutlined","HourglassOutlined","SettingOutlined","title","position","bottom","planData","addPlanLoading","addPlanDone","addPlanError","updatePlanLoading","updatePlanDone","updatePlanError","donePlanLoading","donePlanDone","donePlanError","removePlanLoading","removePlanDone","removePlanError","loadPlanLoading","loadPlanDone","loadPlanError","ADD_PLAN_REQUEST","ADD_PLAN_SUCCESS","ADD_PLAN_FAILURE","UPDATE_PLAN_REQUEST","UPDATE_PLAN_SUCCESS","UPDATE_PLAN_FAILURE","REMOVE_PLAN_REQUEST","REMOVE_PLAN_SUCCESS","REMOVE_PLAN_FAILURE","DONE_PLAN_REQUEST","DONE_PLAN_SUCCESS","DONE_PLAN_FAILURE","LOAD_PLAN_REQUEST","LOAD_PLAN_SUCCESS","LOAD_PLAN_FAILURE","plan","findIndex","RadioContainer","DeleteBtn","span","PlanTextContainer","PlanDate","RadioPlanDday","RadioPlanDate","BadgeContainer","Global","createGlobalStyle","ScheduleList","time","onClickRadio","onDeltePlan","map","item","i","planDoneCheck","start","moment","_d","end","nowDay","Date","dday","Math","ceil","getFullYear","toString","getMonth","getDate","status","size","mobile","tabletSmall","tabletLarge","desktop","media","Object","keys","reduce","acc","label","css","ListContainer","FuturePlanComponent","PastPlanComponent","tabTitle","tabContents","0","1","StyledBackground","FrameStyled","TabsContainer","CardTab","props","active","TabText","ScheduleLayout","activeState","setActiveState","onTabClicked","key","str","idx","UtilBtn","button","PublicBtn","menu","ScheduleTwoTone","marginRight","CalendarTwoTone","HourglassTwoTone","SmileTwoTone","UnlockTwoTone","overlay","trigger","ScheduleContainer","Schedule","PlanListStyled","PlanListComponent","dateValue","planList","setPlanList","console","log","onClickUpdate","length","paddingLeft","CalendarContainer","FullCalendarTest","modalVisible","setModalVisible","setDateValue","setTitle","setStart","setEnd","handleCancel","handleOk","onClickedDate","dateClickInfo","dateStr","date","onChangePlanText","preventDefault","plugins","dayGridPlugin","interactionPlugin","initialView","dateClick","events","displayEventTime","visible","onOk","onCancel","cancelText","okText","selected","selectsStart","startDate","selectsEnd","endDate","Calendar","FullCalendar","mainPosts","imagePaths","hasMorePost","loadPostLoading","loadPostDone","loadPostError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","uploadImagesLoading","uploadImagesDone","uploadImagesError","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","REMOVE_IMAGE","post","concat","Overlay","Header","header","CloseBtn","CloseOutlined","SlickWrapper","ImageWrapper","Indicator","ImagesZoom","images","onClose","currentSlide","setCurrentSlide","initialSlide","beforeChange","slide","infinite","fade","slidesToShow","slidesToScroll","ImagesContainer","PostImages","showImagesZoom","setShowImagesZoom","onZoom","maxHeight","display","PlusOutlined","Meta","Card","CardContainer","postLength","MemoryLayout","useInView","ref","inView","lastId","onClickDelete","postId","ghost","backIcon","subTitle","extra","borderBottom","index","cover","Images","actions","EditOutlined","DeleteOutlined","description","content","substring","undefined","Memory","TextArea","Input","FormContainer","PreviewContainer","PreviewImage","MemoryWriteComponent","rateValue","SetRateValue","writeTitle","onChangeWriteTitle","writeContent","onChangeWriteContent","imageInput","useRef","onChangeImages","imageFormData","FormData","forEach","call","files","f","append","onRemoveImage","onClickImageUpload","current","click","onSubmitWrite","trim","formData","onChangeRate","onBack","window","back","encType","rows","margin","hidden","multiple","write","PlusContainer","DetailPostImages","DetailContainer","DetailComponent","useParams","detailPost","Number","avatar","padding","rate","detail","StyledContainer","InputContainer","DatePickerContainer","BtnContainer","PlanUpdateLayout","useLocation","onSubmitUpdate","planUpdate","InfoContainer","ProfileContainer","InfoItem","InfoLayout","nickModal","setNickModal","emailModal","setEmailModal","nickInput","onChangeNick","emailInput","onClickNickChange","onClickEmailChange","nickOk","nickCancel","emailOk","emailCancel","Info","App","path","component","exact","Login","Join","PasswordFind","PlanUpdate","Write","Detail","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","scheduleValue","calendarValue","memoryValue","SCHEDULE_CLICK","CALENDAR_CLICK","MEMORY_CLICK","rootReducer","combineReducers","logIn","logOut","signUp","nickChagne","emailChange","loadMyInfo","watchLogIn","watchLogOut","watchSignUp","watchNickChange","watchEmailChange","watchLoadMyInfo","userSaga","logInAPI","axios","logOutAPI","signUpAPI","nickChangeAPI","patch","emailChangeAPI","loadMyInfoAPI","get","result","put","response","takeLatest","all","fork","addPost","removePost","loadPost","uploadImages","watchAddPost","watchRemovePost","watchLoadPost","watchUploadImages","postSaga","addPostAPI","removeAPI","delete","loadPostAPI","uploadImagesAPI","addPlan","updatePlan","removePlan","donePlan","loadPlan","watchAddPlan","watchUpdatePlan","watchRemovePlan","watchDonePlan","watchLoadPlan","planSaga","addPlanAPI","updatePlanAPI","removePlanAPI","donePlanAPI","loadPlanAPI","reuslt","rootSaga","defaults","withCredentials","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4343911a.chunk.js","sourcesContent":["import { useState, useCallback } from \"react\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (initValue = null) => {\r\n  const [value, setter] = useState(initValue);\r\n  const handler = useCallback((e) => {\r\n    setter(e.target.value);\r\n  }, []);\r\n\r\n  return [value, handler];\r\n};\r\n","import produce from \"immer\";\r\n\r\nexport const initialState = {\r\n  logInLoading: false, // 로그인 시도중\r\n  logInDone: false,\r\n  logInError: null,\r\n  logOutLoading: false, // 로그아웃 시도중\r\n  logOutDone: false,\r\n  logOutError: null,\r\n  signUpLoading: false,\r\n  signUpDone: false,\r\n  signUpError: null,\r\n  nickChangeLoading: false,\r\n  nickChangeDone: false,\r\n  nickChangeError: null,\r\n  emailChangeLoading: false,\r\n  emailChangeDone: false,\r\n  emailChangeError: null,\r\n  loadMyInfoLoading: false,\r\n  loadMyInfoDone: false,\r\n  loadMyInfoError: null,\r\n  user: null,\r\n  Posts: [{ id: 1 }],\r\n  signUpData: {},\r\n  loginData: {},\r\n};\r\n\r\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\r\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\r\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\r\n\r\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\r\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\r\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\r\n\r\nexport const SIGN_UP_REQUEST = \"SING_UP_REQUEST\";\r\nexport const SIGN_UP_SUCCESS = \"SING_UP_SUCCESS\";\r\nexport const SIGN_UP_FAILURE = \"SING_UP_FAILURE\";\r\n\r\nexport const NICK_CHANGE_REQUEST = \"NICK_CHANGE_REQUEST\";\r\nexport const NICK_CHANGE_SUCCESS = \"NICK_CHANGE_SUCCESS\";\r\nexport const NICK_CHANGE_FAILURE = \"NICK_CHANGE_FAILURE\";\r\n\r\nexport const EMAIL_CHANGE_REQUEST = \"EMAIL_CHANGE_REQUEST\";\r\nexport const EMAIL_CHANGE_SUCCESS = \"EMAIL_CHANGE_SUCCESS\";\r\nexport const EMAIL_CHANGE_FAILURE = \"EMAIL_CHANGE_FAILURE\";\r\n\r\nexport const LOAD_MY_INFO_REQUEST = \"LOAD_MY_INFO_REQUEST\";\r\nexport const LOAD_MY_INFO_SUCCESS = \"LOAD_MY_INFO_SUCCESS\";\r\nexport const LOAD_MY_INFO_FAILURE = \"LOAD_MY_INFO_FAILURE\";\r\n\r\nexport const ADD_POST_TO_ME = \"ADD_POST_TO_ME\";\r\nexport const REMOVE_POST_OF_ME = \"REMOVE_POST_OF_ME\";\r\n\r\nexport const loginRequestAction = (data) => {\r\n  return {\r\n    type: LOG_IN_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const logoutRequestAction = () => {\r\n  return {\r\n    type: LOG_OUT_REQUEST,\r\n  };\r\n};\r\n\r\nconst user = (state = initialState, action) => {\r\n  return produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case LOG_IN_REQUEST:\r\n        draft.logInLoading = true;\r\n        draft.logInError = null;\r\n        draft.logInDone = false;\r\n        break;\r\n      case LOG_IN_SUCCESS:\r\n        draft.logInLoading = false;\r\n        draft.logInDone = true;\r\n        draft.user = action.data;\r\n        break;\r\n      case LOG_IN_FAILURE:\r\n        draft.logInLoading = false;\r\n        draft.logInDone = false;\r\n        draft.logInError = action.error;\r\n        break;\r\n      case LOG_OUT_REQUEST:\r\n        draft.logOutLoading = true;\r\n        draft.logOutDone = false;\r\n        draft.logOutError = null;\r\n        break;\r\n      case LOG_OUT_SUCCESS:\r\n        draft.logOutLoading = false;\r\n        draft.logOutDone = true;\r\n        draft.user = null;\r\n        break;\r\n      case LOG_OUT_FAILURE:\r\n        draft.logOutLoading = false;\r\n        draft.logOutError = action.error;\r\n        break;\r\n      case SIGN_UP_REQUEST:\r\n        draft.signUpLoading = true;\r\n        draft.signUpDone = false;\r\n        draft.signUpError = null;\r\n        break;\r\n      case SIGN_UP_SUCCESS:\r\n        draft.signUpLoading = false;\r\n        draft.signUpDone = true;\r\n        break;\r\n      case SIGN_UP_FAILURE:\r\n        draft.signUpLoading = false;\r\n        draft.signUpError = action.data;\r\n        break;\r\n      case NICK_CHANGE_REQUEST:\r\n        draft.nickChangeLoading = true;\r\n        draft.nickChangeDone = false;\r\n        draft.nickChangeError = null;\r\n        break;\r\n      case NICK_CHANGE_SUCCESS:\r\n        draft.user.nickname = action.data.nickname;\r\n        draft.nickChangeLoading = false;\r\n        draft.nickChangeDone = true;\r\n        break;\r\n      case NICK_CHANGE_FAILURE:\r\n        draft.nickChangeLoading = false;\r\n        draft.nickChangeError = action.data;\r\n        break;\r\n      case EMAIL_CHANGE_REQUEST:\r\n        draft.emailChangeLoading = true;\r\n        draft.emailChangeDone = false;\r\n        draft.emailChangeError = null;\r\n        break;\r\n      case EMAIL_CHANGE_SUCCESS:\r\n        draft.user.email = action.data.email;\r\n        draft.emailChangeLoading = false;\r\n        draft.emailChangeDone = true;\r\n        break;\r\n      case EMAIL_CHANGE_FAILURE:\r\n        draft.emailChangeLoading = false;\r\n        draft.emailChangeError = action.data;\r\n        break;\r\n      case LOAD_MY_INFO_REQUEST:\r\n        draft.loadMyInfoLoading = true;\r\n        draft.loadMyInfoError = null;\r\n        draft.loadMyInfoDone = false;\r\n        break;\r\n      case LOAD_MY_INFO_SUCCESS:\r\n        draft.loadMyInfoLoading = false;\r\n        draft.loadMyInfoDone = true;\r\n        draft.user = action.data;\r\n        break;\r\n      case LOAD_MY_INFO_FAILURE:\r\n        draft.loadMyInfoLoading = false;\r\n        draft.loadMyInfoError = action.data;\r\n        break;\r\n      case ADD_POST_TO_ME:\r\n        draft.Posts.unshift({ id: action.data });\r\n        break;\r\n      case REMOVE_POST_OF_ME:\r\n        draft.Posts = draft.Posts.filter((v) => v.id !== action.data);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n};\r\n\r\nexport default user;\r\n","import React, { useCallback, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { LOAD_MY_INFO_REQUEST, loginRequestAction } from \"../reducers/user\";\r\n\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst KakaoBtn = styled.a`\r\n  width: 100%;\r\n  height: 50px;\r\n  background-image: url(\"image/kakao_login_medium_wide (1).png\");\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst LoginComponents = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { logInLoading, logInError, user } = useSelector((state) => state.user);\r\n  const [username, onChangeUsername] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.replace(\"/\");\r\n    }\r\n  }, [user, history]);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (logInError) {\r\n      alert(logInError);\r\n    }\r\n  }, [logInError]);\r\n\r\n  const onSubmitLogin = useCallback(() => {\r\n    dispatch(\r\n      loginRequestAction({\r\n        username,\r\n        password,\r\n      })\r\n    );\r\n  }, [username, password, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <img src=\"image/logo_middle2.png\" alt=\"logo\" style={{ width: \"50%\" }} />\r\n      <Form\r\n        name=\"normal_login\"\r\n        className=\"login-form\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onSubmitLogin}\r\n      >\r\n        <Form.Item\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"아이디를 입력 하세요!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Username\"\r\n            value={username}\r\n            onChange={onChangeUsername}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"비밀번호를 입력 하세요!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={onChangePassword}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item onClick={() => alert(\"준비중 입니다.\")}>\r\n          <Link className=\"login-form-forgot\">비밀번호 찾기</Link>\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n            loading={logInLoading}\r\n          >\r\n            로그인\r\n          </Button>\r\n          <Link to=\"/join\">회원가입</Link>\r\n        </Form.Item>\r\n      </Form>\r\n      <KakaoBtn href=\"https://treback.herokuapp.com/user/kakao\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginComponents;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport LoginComponents from \"./LoginComponents\";\r\n\r\nexport const TaggedPosition = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 270px;\r\n`;\r\n\r\nconst LoginLayout = () => {\r\n  return (\r\n    <TaggedPosition>\r\n      <LoginComponents />\r\n    </TaggedPosition>\r\n  );\r\n};\r\n\r\nexport default LoginLayout;\r\n","import React, { useCallback, useEffect } from \"react\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { UserOutlined, LockOutlined, MailOutlined } from \"@ant-design/icons\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { SIGN_UP_REQUEST } from \"../reducers/user\";\r\n\r\nconst JoinComponents = () => {\r\n  const dispatch = useDispatch();\r\n  const { signUpDone, signUpError } = useSelector((state) => state.user);\r\n  const history = useHistory();\r\n  const [username, onChangeUsername] = useInput(\"\");\r\n  const [password, onChangePassword] = useInput(\"\");\r\n  const [nickname, onChangeNickname] = useInput(\"\");\r\n  const [email, onChangeEmail] = useInput(\"\");\r\n\r\n  useEffect(() => {\r\n    if (signUpDone) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [signUpDone, history]);\r\n\r\n  useEffect(() => {\r\n    if (signUpError) {\r\n      alert(signUpError);\r\n    }\r\n  }, [signUpError]);\r\n\r\n  const onSubmitJoin = useCallback(() => {\r\n    dispatch({\r\n      type: SIGN_UP_REQUEST,\r\n      data: { username, password, nickname, email },\r\n    });\r\n    //console.log(username, password, nickname, email);\r\n  }, [username, password, nickname, email, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <img src=\"image/logo_middle2.png\" alt=\"logo\" style={{ width: \"50%\" }} />\r\n      <Form\r\n        name=\"normal_login\"\r\n        className=\"login-form\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onSubmitJoin}\r\n      >\r\n        <Form.Item\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"아이디를 입력 하세요!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Username\"\r\n            value={username}\r\n            onChange={onChangeUsername}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"nickname\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"닉네임을 입력 하세요!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Nickname\"\r\n            value={nickname}\r\n            onChange={onChangeNickname}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"이메일을 입력 하세요!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<MailOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={onChangeEmail}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"비밀번호를 입력 하세요!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={onChangePassword}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          dependencies={[\"password\"]}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please confirm your password!\",\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue(\"password\") === value) {\r\n                  return Promise.resolve();\r\n                }\r\n\r\n                return Promise.reject(\r\n                  new Error(\"비밀번호가 일치하지 않습니다.\")\r\n                );\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\" }}>\r\n            회원가입\r\n          </Button>\r\n        </Form.Item>\r\n        <Link to=\"/\">로그인</Link>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JoinComponents;\r\n","import React from \"react\";\r\nimport { TaggedPosition } from \"./LoginLayout\";\r\nimport JoinComponents from \"./JoinComponents\";\r\n\r\nconst JoinLayout = () => {\r\n  return (\r\n    <TaggedPosition>\r\n      <JoinComponents />\r\n    </TaggedPosition>\r\n  );\r\n};\r\n\r\nexport default JoinLayout;\r\n","import React from \"react\";\r\nimport JoinLayout from \"../components/JoinLayout\";\r\n\r\nconst join = () => {\r\n  return <JoinLayout />;\r\n};\r\n\r\nexport default join;\r\n","import React from \"react\";\r\nimport LoginLayout from \"../components/LoginLayout\";\r\n\r\nconst login = () => {\r\n  return (\r\n    <div>\r\n      <LoginLayout />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default login;\r\n","import React from \"react\";\r\n\r\nconst passwordFind = () => {\r\n  return <div>패스워드 찾기 페이지 입니다.</div>;\r\n};\r\n\r\nexport default passwordFind;\r\n","import React, { useCallback } from \"react\";\r\nimport { Menu } from \"antd\";\r\nimport {\r\n  ScheduleOutlined,\r\n  CalendarOutlined,\r\n  HourglassOutlined,\r\n  SettingOutlined,\r\n} from \"@ant-design/icons\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { logoutRequestAction } from \"../reducers/user\";\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst LogoImg = styled.img`\r\n  margin: 1rem 0 4rem 1.3rem;\r\n`;\r\n\r\nconst MenuStyled = styled(Menu)`\r\n  width: 15%;\r\n  height: 100%;\r\n\r\n  @media (max-width: 900px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\n// const Global = createGlobalStyle`\r\n//   .ant-menu-item {\r\n//     padding: 0 0 0 24px  !important;\r\n//   }\r\n\r\n//   .ant-menu-submenu-title {\r\n//     padding: 0 0 0 24px !important;\r\n//   }\r\n// `;\r\n\r\nconst MenuComponents = () => {\r\n  const history = useHistory();\r\n  const pathURL = history.location.pathname;\r\n  const dispatch = useDispatch();\r\n  //const [menuState, setMenuState] = useState(false);\r\n\r\n  const imgSrcOneDepth = \"image/logo.png\";\r\n  const imgSrcTwoDepth = \"../image/logo.png\";\r\n\r\n  const onClickedLogout = useCallback(() => {\r\n    dispatch(logoutRequestAction());\r\n    history.push(\"/\");\r\n  }, [history, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <MenuStyled\r\n        style={{ width: \"15%\", height: \"100%\" }}\r\n        //menuProps={menuState}\r\n        defaultSelectedKeys={[\"1\"]}\r\n        mode=\"inline\"\r\n        theme=\"light\"\r\n        //inlineCollapsed={menuState}\r\n      >\r\n        <LogoImg\r\n          src={\r\n            pathURL[pathURL.indexOf(\"memory\") + 2] ||\r\n            pathURL === \"/memory/write\"\r\n              ? imgSrcTwoDepth\r\n              : imgSrcOneDepth\r\n          }\r\n          alt=\"logo\"\r\n        />\r\n\r\n        <Menu.Item\r\n          key=\"1\"\r\n          icon={<ScheduleOutlined style={{ fontSize: \"1rem\" }} />}\r\n          style={{ fontSize: \"1rem\", marginBottom: \"2rem\" }}\r\n        >\r\n          <Link to=\"/\">계획</Link>\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"2\"\r\n          icon={<CalendarOutlined style={{ fontSize: \"1rem\" }} />}\r\n          style={{ fontSize: \"1rem\", marginBottom: \"2rem\" }}\r\n        >\r\n          <Link to=\"/calendar\">달력</Link>\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"3\"\r\n          icon={<HourglassOutlined style={{ fontSize: \"1rem\" }} />}\r\n          style={{ fontSize: \"1rem\", marginBottom: \"2rem\" }}\r\n        >\r\n          <Link to=\"/memory\">추억</Link>\r\n        </Menu.Item>\r\n        <SubMenu\r\n          key=\"sub1\"\r\n          icon={<SettingOutlined style={{ fontSize: \"1rem\" }} />}\r\n          title=\"더 보기\"\r\n          style={{\r\n            fontSize: \"1rem\",\r\n            marginBottom: \"2rem\",\r\n            position: \"absolute\",\r\n            bottom: \"5%\",\r\n            width: \"250px\",\r\n            height: \"80px\",\r\n          }}\r\n        >\r\n          <Menu.Item key=\"4\">\r\n            <Link to=\"/info\">내 정보</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"5\" onClick={onClickedLogout}>\r\n            로그아웃\r\n          </Menu.Item>\r\n        </SubMenu>\r\n      </MenuStyled>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MenuComponents;\r\n","import produce from \"immer\";\r\n\r\nexport const initialState = {\r\n  planData: [\r\n    // {\r\n    //   id: 1,\r\n    //   title: \"첫 번째 일정입니다.\",\r\n    //   start: \"2021-07-14T15:00:00.000Z\",\r\n    //   end: \"2021-07-14T15:00:00.000Z\",\r\n    //   dateValue: \"2021-07-15\",\r\n    //   planDoneCheck: false,\r\n    // },\r\n    // {\r\n    //   id: 2,\r\n    //   title: \"두 번째 일정입니다.\",\r\n    //   start: \"2021-07-15T15:00:00.000Z\",\r\n    //   end: \"2021-07-15T15:00:00.000Z\",\r\n    //   dateValue: \"2021-07-16\",\r\n    //   planDoneCheck: false,\r\n    // },\r\n  ],\r\n  addPlanLoading: false,\r\n  addPlanDone: false,\r\n  addPlanError: null,\r\n  updatePlanLoading: false,\r\n  updatePlanDone: false,\r\n  updatePlanError: null,\r\n  donePlanLoading: false,\r\n  donePlanDone: false,\r\n  donePlanError: null,\r\n  removePlanLoading: false,\r\n  removePlanDone: false,\r\n  removePlanError: null,\r\n  loadPlanLoading: false,\r\n  loadPlanDone: false,\r\n  loadPlanError: null,\r\n};\r\n\r\nexport const ADD_PLAN_REQUEST = \"ADD_PLAN_REQUEST\";\r\nexport const ADD_PLAN_SUCCESS = \"ADD_PLAN_SUCCESS\";\r\nexport const ADD_PLAN_FAILURE = \"ADD_PLAN_FAILURE\";\r\n\r\nexport const UPDATE_PLAN_REQUEST = \"UPDATE_PLAN_REQUEST\";\r\nexport const UPDATE_PLAN_SUCCESS = \"UPDATE_PLAN_SUCCESS\";\r\nexport const UPDATE_PLAN_FAILURE = \"UPDATE_PLAN_FAILURE\";\r\n\r\nexport const REMOVE_PLAN_REQUEST = \"REMOVE_PLAN_REQUEST\";\r\nexport const REMOVE_PLAN_SUCCESS = \"REMOVE_PLAN_SUCCESS\";\r\nexport const REMOVE_PLAN_FAILURE = \"REMOVE_PLAN_FAILURE\";\r\n\r\nexport const DONE_PLAN_REQUEST = \"DONE_PLAN_REQUEST\";\r\nexport const DONE_PLAN_SUCCESS = \"DONE_PLAN_SUCCESS\";\r\nexport const DONE_PLAN_FAILURE = \"DONE_PLAN_FAILURE\";\r\n\r\nexport const LOAD_PLAN_REQUEST = \"LOAD_PLAN_REQUEST\";\r\nexport const LOAD_PLAN_SUCCESS = \"LOAD_PLAN_SUCCESS\";\r\nexport const LOAD_PLAN_FAILURE = \"LOAD_PLAN_FAILURE\";\r\n\r\nexport const addPlan = (data) => {\r\n  return {\r\n    type: ADD_PLAN_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const updatePlan = (data) => {\r\n  return {\r\n    type: UPDATE_PLAN_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\nconst plan = (state = initialState, action) => {\r\n  return produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case ADD_PLAN_REQUEST:\r\n        draft.addPlanLoading = true;\r\n        draft.addPlanDone = false;\r\n        draft.addPlanError = null;\r\n        break;\r\n      case ADD_PLAN_SUCCESS:\r\n        draft.addPlanLoading = false;\r\n        draft.addPlanDone = true;\r\n        draft.planData.push(action.data);\r\n        break;\r\n      case ADD_PLAN_FAILURE:\r\n        draft.addPlanLoading = false;\r\n        draft.addPlanError = action.error;\r\n        break;\r\n      case UPDATE_PLAN_REQUEST:\r\n        draft.updatePlanLoading = true;\r\n        draft.updatePlanDone = false;\r\n        draft.updatePlanError = null;\r\n        break;\r\n      case UPDATE_PLAN_SUCCESS:\r\n        const planData = draft.planData;\r\n        planData[draft.planData.findIndex((a) => a.id === action.data.id)] =\r\n          action.data;\r\n        draft.planData = planData;\r\n        draft.updatePlanLoading = true;\r\n        draft.updatePlanDone = false;\r\n        draft.updatePlanError = null;\r\n        break;\r\n      case UPDATE_PLAN_FAILURE:\r\n        draft.updatePlanLoading = false;\r\n        draft.updatePlanError = action.error;\r\n        break;\r\n      case REMOVE_PLAN_REQUEST:\r\n        draft.removePlanLoading = true;\r\n        draft.removePlanDone = false;\r\n        draft.removePlanError = null;\r\n        break;\r\n      case REMOVE_PLAN_SUCCESS:\r\n        draft.removePlanLoading = false;\r\n        draft.removePlanDone = true;\r\n        draft.planData = draft.planData.filter((v) => v.id !== action.data);\r\n        break;\r\n      case REMOVE_PLAN_FAILURE:\r\n        draft.removePlanLoading = false;\r\n        draft.removePlanError = action.error;\r\n        break;\r\n      case LOAD_PLAN_REQUEST:\r\n        draft.loadPlanLoading = true;\r\n        draft.loadPlanDone = false;\r\n        draft.loadPlanError = null;\r\n        break;\r\n      case LOAD_PLAN_SUCCESS:\r\n        draft.loadPlanLoading = false;\r\n        draft.loadPlanDone = true;\r\n        draft.planData = action.data;\r\n        break;\r\n      case LOAD_PLAN_FAILURE:\r\n        draft.loadPlanLoading = false;\r\n        draft.loadPlanError = action.error;\r\n        break;\r\n      case DONE_PLAN_REQUEST:\r\n        draft.donePlanLoading = true;\r\n        draft.donePlanDone = false;\r\n        draft.donePlanError = null;\r\n        break;\r\n      case DONE_PLAN_SUCCESS:\r\n        // const planDatas = draft.planData;\r\n        // planDatas[\r\n        //   draft.planData.findIndex((a) => a.id === action.data)\r\n        // ].planDoneCheck = true;\r\n        // draft.planData = planDatas;\r\n        draft.planData = action.data;\r\n        draft.donePlanLoading = false;\r\n        draft.donePlanDone = true;\r\n        break;\r\n      case DONE_PLAN_FAILURE:\r\n        draft.donePlanLoading = false;\r\n        draft.donePlanError = action.error;\r\n        break;\r\n      default:\r\n        return state;\r\n    }\r\n  });\r\n};\r\n\r\nexport default plan;\r\n","import styled, { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const RadioContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const DeleteBtn = styled.span`\r\n  color: red;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const PlanTextContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const PlanDate = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const RadioPlanDday = styled.span`\r\n  color: red;\r\n`;\r\n\r\nexport const RadioPlanDate = styled.span`\r\n  padding-left: 1.5rem;\r\n  font-size: 0.8rem;\r\n  margin-right: 1rem;\r\n`;\r\n\r\nexport const BadgeContainer = styled.div`\r\n  padding-left: 0.5rem;\r\n  & span {\r\n    font-size: 1.2rem;\r\n  }\r\n`;\r\n\r\nexport const Global = createGlobalStyle`\r\n  .ant-radio-wrapper {\r\n    font-size: 1.2rem;\r\n  }\r\n`;\r\n","import React, { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { Radio, Badge } from \"antd\";\r\nimport { DONE_PLAN_REQUEST, REMOVE_PLAN_REQUEST } from \"../../reducers/plan\";\r\nimport {\r\n  RadioContainer,\r\n  Global,\r\n  PlanTextContainer,\r\n  PlanDate,\r\n  RadioPlanDate,\r\n  RadioPlanDday,\r\n  DeleteBtn,\r\n  BadgeContainer,\r\n} from \"./styles\";\r\n\r\nconst ScheduleList = ({ time }) => {\r\n  const dispatch = useDispatch();\r\n  const planData = useSelector((state) => state.plan.planData);\r\n\r\n  const onClickRadio = useCallback(\r\n    (id) => {\r\n      dispatch({\r\n        type: DONE_PLAN_REQUEST,\r\n        id,\r\n      });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const onDeltePlan = useCallback(\r\n    (id) => {\r\n      dispatch({\r\n        type: REMOVE_PLAN_REQUEST,\r\n        id,\r\n      });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {planData &&\r\n        planData.map((item, i) => {\r\n          if (time) {\r\n            if (item.planDoneCheck) {\r\n              return null;\r\n            }\r\n          } else {\r\n            if (!item.planDoneCheck) {\r\n              return null;\r\n            }\r\n          }\r\n          let start = moment(item.start)._d;\r\n          let end = moment(item.end)._d;\r\n          const nowDay = new Date();\r\n          const dday = Math.ceil((end - nowDay) / (1000 * 60 * 60 * 24));\r\n          start =\r\n            start.getFullYear().toString() +\r\n            \". \" +\r\n            (start.getMonth() + 1).toString() +\r\n            \". \" +\r\n            start.getDate().toString();\r\n          end =\r\n            end.getFullYear().toString() +\r\n            \". \" +\r\n            (end.getMonth() + 1).toString() +\r\n            \". \" +\r\n            end.getDate().toString();\r\n\r\n          return (\r\n            <RadioContainer>\r\n              <Global />\r\n              <PlanTextContainer key={i}>\r\n                {time ? (\r\n                  <Radio key={i} onClick={() => onClickRadio(item.id)}>\r\n                    {item.title}\r\n                  </Radio>\r\n                ) : (\r\n                  <BadgeContainer>\r\n                    <Badge status=\"processing\" />\r\n                    <span>{item.title}</span>\r\n                  </BadgeContainer>\r\n                )}\r\n                <PlanDate key={i}>\r\n                  <RadioPlanDate key={i}>\r\n                    {start} ~ {end}\r\n                  </RadioPlanDate>\r\n                  {time && <RadioPlanDday>D-{dday}</RadioPlanDday>}\r\n                </PlanDate>\r\n              </PlanTextContainer>\r\n              <DeleteBtn key={i} onClick={() => onDeltePlan(item.id)}>\r\n                삭제\r\n              </DeleteBtn>\r\n            </RadioContainer>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ScheduleList;\r\n","import { css } from \"styled-components\";\r\n\r\nexport const size = {\r\n  mobile: 400,\r\n  tabletSmall: 600,\r\n  tabletLarge: 900,\r\n  desktop: 1024,\r\n};\r\n\r\nexport const media = Object.keys(size).reduce((acc, label) => {\r\n  acc[label] = (...args) => css`\r\n    @media (max-width: ${size[label] / 16}em) {\r\n      ${css(...args)};\r\n    }\r\n  `;\r\n  return acc;\r\n}, {});\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ScheduleList from \"./ScheduleList\";\r\nimport { media } from \"./style/theme\";\r\n\r\nexport const ListContainer = styled.div`\r\n  padding: 3rem 4rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  ${media.mobile`padding: 1rem 1.2rem;`}\r\n`;\r\n\r\nconst FuturePlanComponent = () => {\r\n  return (\r\n    <>\r\n      <ListContainer>\r\n        <ScheduleList time />\r\n      </ListContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FuturePlanComponent;\r\n","import React from \"react\";\r\nimport ScheduleList from \"./ScheduleList\";\r\nimport { ListContainer } from \"./FuturePlanComponent\";\r\n\r\nconst PastPlanComponent = () => {\r\n  return (\r\n    <>\r\n      <ListContainer>\r\n        <ScheduleList time={false} />\r\n      </ListContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PastPlanComponent;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { LOAD_PLAN_REQUEST } from \"../reducers/plan\";\r\nimport FuturePlanComponent from \"./FuturePlanComponent\";\r\nimport PastPlanComponent from \"./PastPlanComponent\";\r\n\r\nconst tabTitle = [\"일정 계획\", \"지난 계획\"];\r\n\r\nconst tabContents = {\r\n  0: <FuturePlanComponent />,\r\n  1: <PastPlanComponent />,\r\n};\r\n\r\nexport const StyledBackground = styled.div`\r\n  background-color: #dfe6ed;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const FrameStyled = styled.div`\r\n  background-color: #fff;\r\n  width: 90%;\r\n  height: 85%;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  border-radius: 15px;\r\n  overflow: auto;\r\n`;\r\n\r\nconst TabsContainer = styled.div`\r\n  width: 100%;\r\n  height: 60px;\r\n  border-bottom: 1px solid #f3f3f3;\r\n  display: flex;\r\n`;\r\n\r\nconst CardTab = styled.div`\r\n  position: relative;\r\n  width: 300px;\r\n  height: 100%;\r\n  border: 1px solid #f3f3f3;\r\n  border-radius: 15px 0 0 0;\r\n  cursor: pointer;\r\n  background-color: #fffcf1;\r\n\r\n  &:hover {\r\n    color: #3fbdff;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.active &&\r\n    css`\r\n      background-color: #fff;\r\n      &:hover {\r\n        color: #000;\r\n      }\r\n    `};\r\n`;\r\n\r\nconst TabText = styled.span`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst ScheduleLayout = () => {\r\n  const dispatch = useDispatch();\r\n  const [activeState, setActiveState] = useState(0);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_PLAN_REQUEST,\r\n    });\r\n  }, [dispatch]);\r\n\r\n  const onTabClicked = useCallback((key) => {\r\n    setActiveState(key);\r\n  }, []);\r\n\r\n  return (\r\n    <StyledBackground>\r\n      <FrameStyled>\r\n        <TabsContainer>\r\n          {tabTitle.map((str, idx) => {\r\n            return (\r\n              <CardTab\r\n                active={activeState === idx}\r\n                key={idx}\r\n                onClick={() => onTabClicked(idx)}\r\n              >\r\n                <TabText>{str}</TabText>\r\n              </CardTab>\r\n            );\r\n          })}\r\n        </TabsContainer>\r\n        {tabContents[activeState]}\r\n      </FrameStyled>\r\n    </StyledBackground>\r\n  );\r\n};\r\n\r\nexport default ScheduleLayout;\r\n","import React, { useCallback } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport {\r\n  ScheduleTwoTone,\r\n  CalendarTwoTone,\r\n  HourglassTwoTone,\r\n  SmileTwoTone,\r\n  UnlockTwoTone,\r\n} from \"@ant-design/icons\";\r\nimport { media } from \"./style/theme\";\r\nimport { logoutRequestAction } from \"../reducers/user\";\r\n\r\nconst UtilBtn = styled.button`\r\n  position: fixed;\r\n  right: 60px;\r\n  bottom: 100px;\r\n  background-image: url(\"image/mediaBtn.png\");\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-color: #fff;\r\n  cursor: pointer;\r\n  border: none;\r\n  width: 70px;\r\n  height: 70px;\r\n  z-index: 8000;\r\n  display: none;\r\n  border-radius: 60px;\r\n\r\n  ${media.tabletLarge`display: inline;`}\r\n  ${media.mobile`bottom: 30px; right:30px;`}\r\n`;\r\n\r\nconst PublicBtn = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const onClickedLogout = useCallback(() => {\r\n    dispatch(logoutRequestAction());\r\n    history.push(\"/\");\r\n  }, [history, dispatch]);\r\n\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item key=\"plan\">\r\n        <Link to=\"/\">\r\n          <ScheduleTwoTone style={{ marginRight: \"0.3rem\" }} />\r\n          계획\r\n        </Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"calendar\">\r\n        <Link to=\"/calendar\">\r\n          <CalendarTwoTone style={{ marginRight: \"0.3rem\" }} />\r\n          달력\r\n        </Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"memory\">\r\n        <Link to=\"/memory\">\r\n          <HourglassTwoTone style={{ marginRight: \"0.3rem\" }} />\r\n          추억\r\n        </Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"info\">\r\n        <Link to=\"/info\">\r\n          <SmileTwoTone style={{ marginRight: \"0.3rem\" }} />내 정보\r\n        </Link>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"logout\" onClick={onClickedLogout}>\r\n        <UnlockTwoTone style={{ marginRight: \"0.3rem\" }} />\r\n        로그아웃\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Dropdown overlay={menu} trigger={[\"click\"]}>\r\n        <UtilBtn />\r\n      </Dropdown>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PublicBtn;\r\n","import React, { useEffect } from \"react\";\r\nimport MenuComponents from \"../components/MenuComponents\";\r\nimport ScheduleLayout from \"../components/ScheduleLayout\";\r\nimport PublicBtn from \"../components/PublicBtn\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const ScheduleContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Schedule = () => {\r\n  const { user } = useSelector((state) => state.user);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      history.replace(\"/login\");\r\n    }\r\n  }, [user, history]);\r\n\r\n  return (\r\n    <ScheduleContainer>\r\n      <MenuComponents />\r\n      <ScheduleLayout />\r\n      <PublicBtn />\r\n    </ScheduleContainer>\r\n  );\r\n};\r\n\r\nexport default Schedule;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Badge, Button, Input } from \"antd\";\r\n\r\nconst PlanListStyled = styled.div`\r\n  width: 100%;\r\n  margin-bottom: 3rem;\r\n\r\n  button {\r\n    float: right;\r\n  }\r\n`;\r\n\r\nconst PlanListComponent = ({ dateValue }) => {\r\n  const history = useHistory();\r\n  const { planData } = useSelector((state) => state.plan);\r\n  const [planList, setPlanList] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"list rendering\");\r\n    setPlanList(planData.filter((a, i) => a.dateValue === dateValue));\r\n  }, [dateValue, planData]);\r\n\r\n  //console.log(planList);\r\n\r\n  const onClickUpdate = useCallback(\r\n    (key) => {\r\n      history.push({\r\n        pathname: `/calendar/${key}`,\r\n        state: { planList: planList },\r\n      });\r\n    },\r\n    [planList, history]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {planList.length > 0 &&\r\n        planList.map((item, i) => (\r\n          <PlanListStyled>\r\n            <Badge status=\"success\" key={i} />\r\n            <Input\r\n              //defaultValue={item.title}\r\n              style={{ width: \"80%\", paddingLeft: \"0px\" }}\r\n              value={item.title}\r\n              key={i}\r\n            />\r\n            <Button\r\n              type=\"text\"\r\n              onClick={() => onClickUpdate(item.id)}\r\n              key={item.id}\r\n            >\r\n              수정\r\n            </Button>\r\n          </PlanListStyled>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlanListComponent;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { addPlan, LOAD_PLAN_REQUEST } from \"../reducers/plan\";\r\nimport PlanListComponent from \"./PlanListComponent\";\r\n\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"./style/LoginForm.css\";\r\nimport \"./style/DatePickerStyle.css\";\r\nimport \"./style/FullCalendarStyle.css\";\r\n\r\nimport { Modal, Input } from \"antd\";\r\n\r\nconst CalendarContainer = styled.div`\r\n  width: 90%;\r\n  height: 100%;\r\n`;\r\n\r\nconst FullCalendarTest = () => {\r\n  const planData = useSelector((state) => state.plan.planData);\r\n  const dispatch = useDispatch();\r\n  const [modalVisible, setModalVisible] = useState(false); // modal 생성 여부\r\n  const [dateValue, setDateValue] = useState(\"\"); // 캘린더 달력 클릭 시 값\r\n  const [title, setTitle] = useState(\"\"); // 일정 추가 내용\r\n  const [start, setStart] = useState(\"\"); // DatePicker 기본 default 날짜 객체\r\n  const [end, setEnd] = useState(\"\"); // DatePicker 기본 default 날짜 객체\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_PLAN_REQUEST,\r\n    });\r\n  }, [dispatch]);\r\n\r\n  const handleCancel = useCallback(() => {\r\n    setModalVisible(false);\r\n  }, []);\r\n\r\n  const handleOk = useCallback(() => {\r\n    setModalVisible(false);\r\n    dispatch(\r\n      addPlan({\r\n        start,\r\n        end,\r\n        title,\r\n        dateValue,\r\n        planDoneCheck: false,\r\n      })\r\n    );\r\n    setTitle(\"\");\r\n  }, [title, dateValue, end, start, dispatch]);\r\n\r\n  const onClickedDate = useCallback((dateClickInfo) => {\r\n    setDateValue(dateClickInfo.dateStr);\r\n    setStart(dateClickInfo.date);\r\n    setEnd(dateClickInfo.date);\r\n    setModalVisible(true);\r\n  }, []);\r\n\r\n  const onChangePlanText = useCallback((e) => {\r\n    e.preventDefault();\r\n    setTitle(e.target.value);\r\n  }, []);\r\n\r\n  return (\r\n    <CalendarContainer>\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin, interactionPlugin]}\r\n        initialView=\"dayGridMonth\"\r\n        height=\"90%\"\r\n        dateClick={onClickedDate}\r\n        events={planData}\r\n        displayEventTime={false}\r\n      />\r\n      <Modal\r\n        title=\"일정 추가\"\r\n        visible={modalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        cancelText=\"취소\"\r\n        okText=\"추가\"\r\n      >\r\n        {<PlanListComponent dateValue={dateValue} />}\r\n        <DatePicker\r\n          selected={start}\r\n          onChange={(date) => setStart(date)}\r\n          selectsStart\r\n          startDate={start}\r\n        />\r\n        ~\r\n        <DatePicker\r\n          selected={end}\r\n          onChange={(date) => setEnd(date)}\r\n          selectsEnd\r\n          startDate={start}\r\n          endDate={end}\r\n        />\r\n        <Input\r\n          placeholder=\"일정을 입력해주세요\"\r\n          style={{ marginBottom: \"2.5rem\" }}\r\n          value={title}\r\n          onChange={onChangePlanText}\r\n        />\r\n      </Modal>\r\n    </CalendarContainer>\r\n  );\r\n};\r\n\r\nexport default FullCalendarTest;\r\n","import React from \"react\";\r\nimport MenuComponents from \"../components/MenuComponents\";\r\nimport FullCalendar from \"../components/FullCalendar\";\r\nimport PublicBtn from \"../components/PublicBtn\";\r\nimport { ScheduleContainer } from \"./schedule\";\r\n\r\nconst Calendar = () => {\r\n  return (\r\n    <ScheduleContainer>\r\n      <MenuComponents />\r\n      <FullCalendar />\r\n      <PublicBtn />\r\n    </ScheduleContainer>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","import produce from \"immer\";\r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  imagePaths: [],\r\n  hasMorePost: true,\r\n  loadPostLoading: false,\r\n  loadPostDone: false,\r\n  loadPostError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  uploadImagesLoading: false,\r\n  uploadImagesDone: false,\r\n  uploadImagesError: null,\r\n};\r\n\r\nexport const LOAD_POST_REQUEST = \"LOAD_POST_REQUEST\";\r\nexport const LOAD_POST_SUCCESS = \"LOAD_POST_SUCCESS\";\r\nexport const LOAD_POST_FAILURE = \"LOAD_POST_FAILURE\";\r\n\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\r\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\r\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = \"UPLOAD_IMAGES_REQUEST\";\r\nexport const UPLOAD_IMAGES_SUCCESS = \"UPLOAD_IMAGES_SUCCESS\";\r\nexport const UPLOAD_IMAGES_FAILURE = \"UPLOAD_IMAGES_FAILURE\";\r\n\r\nexport const REMOVE_IMAGE = \"REMOVE_IMAGE\";\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nconst post = (state = initialState, action) => {\r\n  return produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case LOAD_POST_REQUEST:\r\n        draft.loadPostLoading = true;\r\n        draft.loadPostDone = false;\r\n        draft.loadPostError = null;\r\n        break;\r\n      case LOAD_POST_SUCCESS:\r\n        console.log(action.data);\r\n        draft.loadPostLoading = false;\r\n        draft.loadPostDone = true;\r\n        draft.mainPosts = draft.mainPosts.concat(action.data);\r\n        draft.hasMorePost = action.data.length === 10;\r\n        break;\r\n      case LOAD_POST_FAILURE:\r\n        draft.loadPostLoading = false;\r\n        draft.loadPostError = action.error;\r\n        break;\r\n      case ADD_POST_REQUEST:\r\n        draft.addPostLoading = true;\r\n        draft.addPostDone = false;\r\n        draft.addPostError = null;\r\n        break;\r\n      case ADD_POST_SUCCESS:\r\n        draft.addPostLoading = false;\r\n        draft.addPostDone = true;\r\n        draft.mainPosts.unshift(action.data);\r\n        draft.imagePaths = [];\r\n        break;\r\n      case ADD_POST_FAILURE:\r\n        draft.addPostLoading = false;\r\n        draft.addPostError = action.error;\r\n        break;\r\n      case REMOVE_POST_REQUEST:\r\n        draft.removePostLoading = true;\r\n        draft.removePostDone = false;\r\n        draft.removePostError = null;\r\n        break;\r\n      case REMOVE_POST_SUCCESS:\r\n        draft.removePostLoading = false;\r\n        draft.removePostDone = true;\r\n        draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\r\n        break;\r\n      case REMOVE_POST_FAILURE:\r\n        draft.removePostLoading = false;\r\n        draft.removePostError = action.error;\r\n        break;\r\n      case UPLOAD_IMAGES_REQUEST:\r\n        draft.uploadImagesLoading = true;\r\n        draft.uploadImagesDone = false;\r\n        draft.uploadImagesError = null;\r\n        break;\r\n      case UPLOAD_IMAGES_SUCCESS:\r\n        console.log(action.data);\r\n        draft.uploadImagesLoading = false;\r\n        draft.uploadImagesDone = true;\r\n        draft.imagePaths = action.data;\r\n        break;\r\n      case UPLOAD_IMAGES_FAILURE:\r\n        draft.uploadImagesLoading = false;\r\n        draft.uploadImagesError = action.error;\r\n        break;\r\n      case REMOVE_IMAGE:\r\n        draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n};\r\n\r\nexport default post;\r\n","import styled, { createGlobalStyle } from \"styled-components\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  z-index: 5000;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  height: 44px;\r\n  background: white;\r\n  position: relative;\r\n  padding: 0;\r\n  text-align: center;\r\n\r\n  & h1 {\r\n    margin: 0;\r\n    font-size: 17px;\r\n    color: #333;\r\n    line-height: 44px;\r\n  }\r\n  & button {\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    padding: 15px;\r\n    line-height: 14px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const CloseBtn = styled(CloseOutlined)`\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  padding: 15px;\r\n  line-height: 14px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const SlickWrapper = styled.div`\r\n  height: calc(100% - 44px);\r\n  background-color: #090909;\r\n`;\r\n\r\nexport const ImageWrapper = styled.div`\r\n  padding: 32px;\r\n  text-align: center;\r\n\r\n  & img {\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    max-height: 750px;\r\n  }\r\n`;\r\n\r\nexport const Global = createGlobalStyle`\r\n    .slick-slide {\r\n        display: inline-block;\r\n    }\r\n    /* .slick-arrow {\r\n      border-radius: 50px;\r\n    }\r\n    .slick-prev {\r\n      position:absolute;\r\n      top:40%;\r\n      left: 10px;\r\n      transform:translateY(-50%);\r\n      z-index: 1000;\r\n    }\r\n    .slick-next {\r\n      position:absolute;\r\n      top:40%;\r\n      right: 10px;\r\n      transform:translateY(-50%);\r\n      z-index: 1000;\r\n    } */\r\n    .ant-card-cover {\r\n        transform: none !important;\r\n    }\r\n`;\r\n\r\nexport const Indicator = styled.div`\r\n  text-align: center;\r\n\r\n  & > div {\r\n    width: 75px;\r\n    height: 30px;\r\n    line-height: 30px;\r\n    border-radius: 15px;\r\n    background-color: #313131;\r\n    display: inline-block;\r\n    text-align: center;\r\n    color: white;\r\n    font-size: 15px;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport Slick from \"react-slick\";\r\nimport {\r\n  Overlay,\r\n  Global,\r\n  Header,\r\n  SlickWrapper,\r\n  Indicator,\r\n  CloseBtn,\r\n  ImageWrapper,\r\n} from \"./styles\";\r\n\r\nconst ImagesZoom = ({ images, onClose }) => {\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n  console.log(images);\r\n  return (\r\n    <Overlay>\r\n      <Global />\r\n      <Header>\r\n        <h1>상세 이미지</h1>\r\n        <CloseBtn onClick={onClose} />\r\n      </Header>\r\n      <SlickWrapper>\r\n        <Slick\r\n          initialSlide={0}\r\n          beforeChange={(slide) => setCurrentSlide(slide)}\r\n          infinite\r\n          fade\r\n          slidesToShow={1}\r\n          slidesToScroll={1}\r\n        >\r\n          {images.map((v) => (\r\n            <ImageWrapper key={v.src}>\r\n              <img src={`https://treback.herokuapp.com/${v.src}`} alt={v.src} />\r\n            </ImageWrapper>\r\n          ))}\r\n        </Slick>\r\n        <Indicator>\r\n          <div>\r\n            {currentSlide + 1} /{images.length}\r\n          </div>\r\n        </Indicator>\r\n      </SlickWrapper>\r\n    </Overlay>\r\n  );\r\n};\r\n\r\nexport default ImagesZoom;\r\n","import { PlusOutlined } from \"@ant-design/icons\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ImagesZoom from \"./ImagesZoom\";\r\n\r\nconst ImagesContainer = styled.div`\r\n  display: inline-block;\r\n  width: 50%;\r\n  text-align: center;\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst PostImages = ({ images }) => {\r\n  const [showImagesZoom, setShowImagesZoom] = useState(false);\r\n  console.log(images);\r\n  const onZoom = useCallback(() => {\r\n    setShowImagesZoom(true);\r\n  }, []);\r\n  const onClose = useCallback(() => {\r\n    setShowImagesZoom(false);\r\n  }, []);\r\n\r\n  if (images.length === 1) {\r\n    return (\r\n      <>\r\n        <img\r\n          src={`https://treback.herokuapp.com/${images[0].src}`}\r\n          alt={images[0].src}\r\n          onClick={onZoom}\r\n          style={{ maxHeight: \"200px\" }}\r\n        />\r\n        {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\r\n      </>\r\n    );\r\n  }\r\n  if (images.length === 2) {\r\n    return (\r\n      <>\r\n        <img\r\n          src={`https://treback.herokuapp.com/${images[0].src}`}\r\n          style={{ width: \"50%\", display: \"inline-block\", height: \"200px\" }}\r\n          alt={images[0].src}\r\n          onClick={onZoom}\r\n        />\r\n        <img\r\n          src={`https://treback.herokuapp.com/${images[1].src}`}\r\n          style={{ width: \"50%\", display: \"inline-block\", height: \"200px\" }}\r\n          alt={images[1].src}\r\n          onClick={onZoom}\r\n        />\r\n        {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <div>\r\n        <img\r\n          src={`https://treback.herokuapp.com/${images[0].src}`}\r\n          width=\"50%\"\r\n          alt={images[0].src}\r\n          onClick={onZoom}\r\n          style={{ height: \"200px\" }}\r\n        />\r\n        <ImagesContainer onClick={onZoom}>\r\n          <PlusOutlined />\r\n          <br />\r\n          {images.length - 1}\r\n          개의 사진 더보기\r\n        </ImagesContainer>\r\n      </div>\r\n      {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostImages;\r\n","import React, { useCallback, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { PageHeader, Button, Card } from \"antd\";\r\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport { StyledBackground, FrameStyled } from \"./ScheduleLayout\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LOAD_POST_REQUEST, REMOVE_POST_REQUEST } from \"../reducers/post\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport PostImages from \"./PostImages\";\r\nimport { media } from \"./style/theme\";\r\n\r\nconst { Meta } = Card;\r\n\r\nconst CardContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  padding: 2rem 2rem;\r\n  gap: 2rem;\r\n  overflow-y: scroll;\r\n\r\n  .card-item {\r\n    width: 23%;\r\n    margin: 0 0rem 0rem 0rem;\r\n    //height: 370px;\r\n    height: 100%;\r\n\r\n    ${media.desktop`width: 30%;`}\r\n    ${media.tabletLarge`width: 45%;`}\r\n    ${media.mobile`width:950%;`}\r\n  }\r\n\r\n  ${(props) =>\r\n    props.postLength &&\r\n    css`\r\n      //height: calc(100% - 85px);\r\n    `}\r\n`;\r\n\r\nconst MemoryLayout = () => {\r\n  const dispatch = useDispatch();\r\n  const [ref, inView] = useInView();\r\n  const { mainPosts, hasMorePost, loadPostLoading } = useSelector(\r\n    (state) => state.post\r\n  );\r\n\r\n  useEffect(() => {\r\n    const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n    if (hasMorePost) {\r\n      dispatch({\r\n        type: LOAD_POST_REQUEST,\r\n        lastId,\r\n      });\r\n    }\r\n  }, [hasMorePost, mainPosts, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (inView && hasMorePost && !loadPostLoading) {\r\n      const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n      dispatch({\r\n        type: LOAD_POST_REQUEST,\r\n        lastId,\r\n      });\r\n    }\r\n  }, [inView, hasMorePost, loadPostLoading, mainPosts, dispatch]);\r\n\r\n  const onClickDelete = useCallback(\r\n    (postId) => {\r\n      dispatch({\r\n        type: REMOVE_POST_REQUEST,\r\n        data: postId,\r\n      });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <StyledBackground>\r\n      <FrameStyled>\r\n        <PageHeader\r\n          ghost={false}\r\n          title=\"추억\"\r\n          backIcon={false}\r\n          subTitle=\"직접 가본 장소\"\r\n          extra={[\r\n            <Button key=\"1\">\r\n              <Link to=\"/memory/write\">작성하기</Link>\r\n            </Button>,\r\n          ]}\r\n          style={{ borderBottom: \"1px solid #f3f3f3\" }}\r\n        />\r\n        <CardContainer postLength={mainPosts.length > 4 && true}>\r\n          {mainPosts.map((post, index) => (\r\n            <Card\r\n              key={post.id}\r\n              className=\"card-item\"\r\n              cover={\r\n                post.Images[0] ? (\r\n                  <PostImages images={post.Images} />\r\n                ) : (\r\n                  <img\r\n                    src=\"https://images.unsplash.com/photo-1608745644869-8a57e8461906?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1267&q=80\"\r\n                    alt=\"cover\"\r\n                    style={{ maxHeight: \"200px\" }}\r\n                  />\r\n                )\r\n              }\r\n              actions={[\r\n                <EditOutlined key=\"edit\" />,\r\n                <DeleteOutlined\r\n                  key=\"delete\"\r\n                  onClick={() => onClickDelete(post.id)}\r\n                />,\r\n              ]}\r\n            >\r\n              <Link to={`/memory/${post.id}`}>\r\n                <Meta\r\n                  title={post.title}\r\n                  description={\r\n                    post.content.length > 70\r\n                      ? post.content.substring(0, 70).concat(\"...\")\r\n                      : post.content\r\n                  }\r\n                />\r\n              </Link>\r\n            </Card>\r\n          ))}\r\n          <div ref={hasMorePost && !loadPostLoading ? ref : undefined} />\r\n        </CardContainer>\r\n      </FrameStyled>\r\n    </StyledBackground>\r\n  );\r\n};\r\n\r\nexport default MemoryLayout;\r\n","import React from \"react\";\r\nimport MemoryLayout from \"../components/MemoryLayout\";\r\nimport MenuComponents from \"../components/MenuComponents\";\r\nimport PublicBtn from \"../components/PublicBtn\";\r\nimport { ScheduleContainer } from \"./schedule\";\r\n\r\nconst Memory = () => {\r\n  return (\r\n    <>\r\n      <ScheduleContainer>\r\n        <MenuComponents />\r\n        <MemoryLayout />\r\n        <PublicBtn />\r\n      </ScheduleContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Memory;\r\n","import React, { useCallback, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { PageHeader, Button, Form, Input, Rate } from \"antd\";\r\nimport { StyledBackground, FrameStyled } from \"./ScheduleLayout\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  UPLOAD_IMAGES_REQUEST,\r\n  ADD_POST_REQUEST,\r\n  REMOVE_IMAGE,\r\n} from \"../reducers/post\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst FormContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  align-items: center;\r\n  margin-top: 3rem;\r\n\r\n  .write-submit-btn {\r\n    float: right;\r\n    position: absolute;\r\n    bottom: 130px;\r\n    right: 184px;\r\n  }\r\n`;\r\n\r\nconst PreviewContainer = styled.div`\r\n  text-align: left;\r\n`;\r\n\r\nconst PreviewImage = styled.div`\r\n  display: inline-block;\r\n\r\n  & img {\r\n    width: 100px;\r\n  }\r\n\r\n  & Button {\r\n    margin-top: 1rem;\r\n  }\r\n`;\r\n\r\nconst MemoryWriteComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { imagePaths } = useSelector((state) => state.post);\r\n  const [rateValue, SetRateValue] = useState(0);\r\n  const [writeTitle, onChangeWriteTitle] = useInput(\"\");\r\n  const [writeContent, onChangeWriteContent] = useInput(\"\");\r\n  const imageInput = useRef();\r\n\r\n  const onChangeImages = useCallback(\r\n    (e) => {\r\n      const imageFormData = new FormData();\r\n      [].forEach.call(e.target.files, (f) => {\r\n        imageFormData.append(\"image\", f);\r\n      });\r\n      dispatch({\r\n        type: UPLOAD_IMAGES_REQUEST,\r\n        data: imageFormData,\r\n      });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const onRemoveImage = useCallback(\r\n    (index) => () => {\r\n      dispatch({\r\n        type: REMOVE_IMAGE,\r\n        data: index,\r\n      });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const onClickImageUpload = useCallback(() => {\r\n    imageInput.current.click();\r\n  }, []);\r\n\r\n  const onSubmitWrite = useCallback(() => {\r\n    if (\r\n      (!writeTitle || !writeTitle.trim()) &&\r\n      (!writeContent || !writeContent.trim())\r\n    ) {\r\n      return alert(\"제목 또는 게시물을 작성하세요\");\r\n    }\r\n    const formData = new FormData();\r\n    imagePaths.forEach((i) => {\r\n      formData.append(\"image\", i);\r\n    });\r\n    formData.append(\"title\", writeTitle);\r\n    formData.append(\"content\", writeContent);\r\n    formData.append(\"rate\", rateValue);\r\n\r\n    history.push(\"/memory\");\r\n\r\n    dispatch({\r\n      type: ADD_POST_REQUEST,\r\n      data: formData,\r\n    });\r\n  }, [writeTitle, writeContent, rateValue, imagePaths, history, dispatch]);\r\n\r\n  const onChangeRate = useCallback((value) => {\r\n    SetRateValue(value);\r\n  }, []);\r\n\r\n  return (\r\n    <StyledBackground>\r\n      <FrameStyled>\r\n        <PageHeader\r\n          ghost={false}\r\n          title=\"작성하기\"\r\n          onBack={() => window.history.back()}\r\n          subTitle=\"직접 가본 장소\"\r\n          extra={[\r\n            <Button key=\"1\" onClick={() => history.push(\"/memory\")}>\r\n              취소\r\n            </Button>,\r\n          ]}\r\n          style={{ borderBottom: \"1px solid #f3f3f3\" }}\r\n        />\r\n        <FormContainer>\r\n          <Form\r\n            name=\"postWrite\"\r\n            style={{ width: \"75%\" }}\r\n            onFinish={onSubmitWrite}\r\n            encType=\"multipart/form-data\"\r\n          >\r\n            <Form.Item name=\"title\">\r\n              <Input\r\n                placeholder=\"제목\"\r\n                size=\"large\"\r\n                value={writeTitle}\r\n                onChange={onChangeWriteTitle}\r\n                name=\"title\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"content\">\r\n              <TextArea\r\n                rows={15}\r\n                style={{ margin: \"2rem 0 1rem 0\" }}\r\n                value={writeContent}\r\n                onChange={onChangeWriteContent}\r\n                name=\"content\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"score\">\r\n              <Rate\r\n                style={{ marginBottom: \"2rem\" }}\r\n                value={rateValue}\r\n                onChange={onChangeRate}\r\n                name=\"score\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <input\r\n                type=\"file\"\r\n                hidden\r\n                name=\"image\"\r\n                ref={imageInput}\r\n                multiple\r\n                onChange={onChangeImages}\r\n              />\r\n              <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n            </Form.Item>\r\n            <Form.Item className=\"write-submit-btn\">\r\n              <Button htmlType=\"submit\">작성하기</Button>\r\n            </Form.Item>\r\n            <PreviewContainer>\r\n              {imagePaths.map((v, i) => (\r\n                <PreviewImage key={v}>\r\n                  <img src={`https://treback.herokuapp.com/${v}`} alt={v} />\r\n                  <div>\r\n                    <Button onClick={onRemoveImage(i)}>제거</Button>\r\n                  </div>\r\n                </PreviewImage>\r\n              ))}\r\n            </PreviewContainer>\r\n          </Form>\r\n        </FormContainer>\r\n      </FrameStyled>\r\n    </StyledBackground>\r\n  );\r\n};\r\n\r\nexport default MemoryWriteComponent;\r\n","import React from \"react\";\r\nimport MemoryWriteComponent from \"../components/MemoryWriteComponent\";\r\nimport MenuComponents from \"../components/MenuComponents\";\r\nimport PublicBtn from \"../components/PublicBtn\";\r\nimport { ScheduleContainer } from \"./schedule\";\r\n\r\nconst write = () => {\r\n  return (\r\n    <ScheduleContainer>\r\n      <MenuComponents />\r\n      <MemoryWriteComponent />\r\n      <PublicBtn />\r\n    </ScheduleContainer>\r\n  );\r\n};\r\n\r\nexport default write;\r\n","import { PlusOutlined } from \"@ant-design/icons\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst PlusContainer = styled.div`\r\n  display: inline-block;\r\n  width: 50%;\r\n  text-align: center;\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst ImagesContainer = styled.div`\r\n  height: 350px;\r\n\r\n  & img {\r\n    display: inline-block;\r\n  }\r\n`;\r\n\r\nconst DetailPostImages = ({ images }) => {\r\n  if (images.length === 1) {\r\n    return (\r\n      <>\r\n        <img\r\n          src={`https://treback.herokuapp.com/${images[0].src}`}\r\n          alt={images[0].src}\r\n          style={{ width: \"100%\", maxHeight: \"350px\" }}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n  if (images.length === 2) {\r\n    return (\r\n      <ImagesContainer>\r\n        <img\r\n          src={`https://treback.herokuapp.com/${images[0].src}`}\r\n          style={{ width: \"50%\" }}\r\n          alt={images[0].src}\r\n        />\r\n        <img\r\n          src={`https://treback.herokuapp.com/${images[1].src}`}\r\n          style={{ width: \"50%\" }}\r\n          alt={images[1].src}\r\n        />\r\n      </ImagesContainer>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <div style={{ height: \"350px\" }}>\r\n        <img\r\n          src={`https://treback.herokuapp.com/${images[0].src}`}\r\n          width=\"50%\"\r\n          alt={images[0].src}\r\n          style={{ maxHeight: \"400px\" }}\r\n        />\r\n        <PlusContainer>\r\n          <PlusOutlined />\r\n          <br />\r\n          {images.length - 1}\r\n          개의 사진 더보기\r\n        </PlusContainer>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DetailPostImages;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { StyledBackground, FrameStyled } from \"./ScheduleLayout\";\r\nimport { PageHeader, Rate } from \"antd\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport DetailPostImages from \"./DetailPostImages\";\r\n\r\nconst DetailContainer = styled.div`\r\n  width: 600px;\r\n  height: 650px;\r\n  border: 2px solid #dbdbdb;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst DetailComponent = () => {\r\n  const { id } = useParams();\r\n  const { mainPosts } = useSelector((state) => state.post);\r\n  const detailPost = mainPosts.filter((item) => item.id === Number(id));\r\n\r\n  return (\r\n    <StyledBackground>\r\n      <FrameStyled>\r\n        <PageHeader\r\n          ghost={false}\r\n          title=\"작성하기\"\r\n          onBack={() => window.history.back()}\r\n          subTitle=\"직접 가본 장소\"\r\n          style={{ borderBottom: \"1px solid #f3f3f3\" }}\r\n        />\r\n        <DetailContainer>\r\n          <PageHeader\r\n            title={detailPost[0].title}\r\n            avatar={{\r\n              src: \"https://avatars1.githubusercontent.com/u/8186664?s=460&v=4\",\r\n            }}\r\n            style={{ borderBottom: \"1px solid #f3f3f3\", padding: \"10px 20px\" }}\r\n          />\r\n          {detailPost[0].Images.length > 0 ? (\r\n            <DetailPostImages images={detailPost[0].Images} />\r\n          ) : (\r\n            <img\r\n              src=\"https://avatars1.githubusercontent.com/u/8186664?s=460&v=4\"\r\n              alt=\"test\"\r\n              style={{ width: \"100%\", height: \"400px\" }}\r\n            />\r\n          )}\r\n          <Rate\r\n            value={detailPost[0].rate}\r\n            style={{ padding: \"0 20px\", margin: \"1rem 0\" }}\r\n          />\r\n          <div style={{ padding: \"0 20px\" }}>{detailPost[0].content}</div>\r\n        </DetailContainer>\r\n      </FrameStyled>\r\n    </StyledBackground>\r\n  );\r\n};\r\n\r\nexport default DetailComponent;\r\n","import React from \"react\";\r\nimport MenuComponents from \"../components/MenuComponents\";\r\nimport DetailComponent from \"../components/DetailComponent\";\r\nimport PublicBtn from \"../components/PublicBtn\";\r\nimport { ScheduleContainer } from \"./schedule\";\r\n\r\nconst detail = () => {\r\n  return (\r\n    <ScheduleContainer>\r\n      <MenuComponents />\r\n      <DetailComponent />\r\n      <PublicBtn />\r\n    </ScheduleContainer>\r\n  );\r\n};\r\n\r\nexport default detail;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport styled, { createGlobalStyle } from \"styled-components\";\r\nimport { PageHeader, Button, Input } from \"antd\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updatePlan } from \"../reducers/plan\";\r\nimport moment from \"moment\";\r\n\r\nconst Global = createGlobalStyle`\r\n    .ant-page-header {\r\n        padding: 0;\r\n        margin-bottom: 2rem;\r\n    }\r\n\r\n    .react-datepicker-wrapper {\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nconst StyledContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 40%;\r\n  padding: 2rem 0 0 2rem;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 4rem;\r\n\r\n  & label {\r\n    font-size: 1rem;\r\n    margin-right: 1rem;\r\n  }\r\n\r\n  & Input {\r\n    width: 75%;\r\n  }\r\n`;\r\n\r\nconst DatePickerContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  & label {\r\n    font-size: 1rem;\r\n    margin-right: 1rem;\r\n  }\r\n`;\r\n\r\nconst BtnContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  margin-top: 3rem;\r\n\r\n  & Button {\r\n    margin-right: 1rem;\r\n  }\r\n`;\r\n\r\nconst PlanUpdateLayout = () => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const planList = location.state.planList;\r\n\r\n  const [start, setStart] = useState(moment(planList[0].start)._d);\r\n  const [end, setEnd] = useState(moment(planList[0].end)._d);\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const onChangePlanText = useCallback((e) => {\r\n    e.preventDefault();\r\n    setTitle(e.target.value);\r\n  }, []);\r\n\r\n  const onSubmitUpdate = useCallback(() => {\r\n    dispatch(\r\n      updatePlan({\r\n        id: planList[0].id,\r\n        title,\r\n        start,\r\n        end,\r\n        dateValue: planList[0].dateValue,\r\n      })\r\n    );\r\n    history.push(\"/calendar\");\r\n  }, [title, start, end, planList, history, dispatch]);\r\n\r\n  return (\r\n    <StyledContainer>\r\n      <Global />\r\n      <PageHeader\r\n        ghost={false}\r\n        title=\"일정 변경\"\r\n        onBack={() => window.history.back()}\r\n      />\r\n      <InputContainer>\r\n        <label>일정 :</label>\r\n        <Input size=\"large\" value={title} onChange={onChangePlanText} />\r\n      </InputContainer>\r\n      <DatePickerContainer>\r\n        <label>기간 :</label>\r\n        <DatePicker\r\n          selected={start}\r\n          onChange={(date) => setStart(date)}\r\n          selectsStart\r\n          startDate={start}\r\n        />\r\n        ~\r\n        <DatePicker\r\n          selected={end}\r\n          onChange={(date) => setEnd(date)}\r\n          selectsEnd\r\n          startDate={start}\r\n          endDate={end}\r\n        />\r\n      </DatePickerContainer>\r\n      <BtnContainer>\r\n        <Button type=\"primary\" onClick={onSubmitUpdate}>\r\n          수정\r\n        </Button>\r\n        <Button>취소</Button>\r\n      </BtnContainer>\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default PlanUpdateLayout;\r\n","import React from \"react\";\r\nimport PlanUpdateLayout from \"../components/PlanUpdateLayout\";\r\n\r\nconst planUpdate = () => {\r\n  return <PlanUpdateLayout />;\r\n};\r\n\r\nexport default planUpdate;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { StyledBackground, FrameStyled } from \"./ScheduleLayout\";\r\nimport { Avatar, Modal, Input } from \"antd\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { EMAIL_CHANGE_REQUEST, NICK_CHANGE_REQUEST } from \"../reducers/user\";\r\n\r\nconst InfoContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 2rem 0 0 2rem;\r\n`;\r\n\r\nconst ProfileContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0.5rem 0 0.7rem 0;\r\n\r\n  & div {\r\n    font-size: 1.2rem;\r\n    margin-left: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst InfoItem = styled.div`\r\n  font-size: 1rem;\r\n  margin-top: 2rem;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst InfoLayout = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user.user);\r\n  const [nickModal, setNickModal] = useState(false);\r\n  const [emailModal, setEmailModal] = useState(false);\r\n  const [nickInput, onChangeNick] = useInput(\"\");\r\n  const [emailInput, onChangeEmail] = useInput(\"\");\r\n\r\n  const onClickNickChange = useCallback(() => {\r\n    setNickModal(true);\r\n  }, []);\r\n\r\n  const onClickEmailChange = useCallback(() => {\r\n    setEmailModal(true);\r\n  }, []);\r\n\r\n  const nickOk = useCallback(() => {\r\n    dispatch({\r\n      type: NICK_CHANGE_REQUEST,\r\n      data: nickInput,\r\n    });\r\n    setNickModal(false);\r\n  }, [nickInput, dispatch]);\r\n\r\n  const nickCancel = useCallback(() => {\r\n    setNickModal(false);\r\n  }, []);\r\n\r\n  const emailOk = useCallback(() => {\r\n    dispatch({\r\n      type: EMAIL_CHANGE_REQUEST,\r\n      data: emailInput,\r\n    });\r\n    setEmailModal(false);\r\n  }, [emailInput, dispatch]);\r\n\r\n  const emailCancel = useCallback(() => {\r\n    setEmailModal(false);\r\n  }, []);\r\n\r\n  return (\r\n    <StyledBackground>\r\n      <FrameStyled>\r\n        <InfoContainer>\r\n          <h1>내 정보</h1>\r\n          <ProfileContainer>\r\n            <Avatar size=\"large\" icon={<UserOutlined />} />\r\n            <div>{user.nickname}</div>\r\n          </ProfileContainer>\r\n          <InfoItem onClick={onClickNickChange}>닉네임 변경</InfoItem>\r\n          <InfoItem onClick={onClickEmailChange}>이메일 변경</InfoItem>\r\n          <InfoItem>문의하기 및 버그신고</InfoItem>\r\n          <InfoItem>회원탈퇴</InfoItem>\r\n        </InfoContainer>\r\n        <Modal\r\n          title=\"닉네임 변경\"\r\n          visible={nickModal}\r\n          onOk={nickOk}\r\n          onCancel={nickCancel}\r\n          cancelText=\"취소\"\r\n          okText=\"변경\"\r\n        >\r\n          <Input\r\n            placeholder=\"변경할 닉네임 입력하세요\"\r\n            style={{ marginBottom: \"2.5rem\" }}\r\n            value={nickInput}\r\n            onChange={onChangeNick}\r\n          />\r\n        </Modal>\r\n        <Modal\r\n          title=\"이메일 변경\"\r\n          visible={emailModal}\r\n          onOk={emailOk}\r\n          onCancel={emailCancel}\r\n          cancelText=\"취소\"\r\n          okText=\"변경\"\r\n        >\r\n          <Input\r\n            placeholder=\"변경할 이메일 입력하세요\"\r\n            style={{ marginBottom: \"2.5rem\" }}\r\n            value={emailInput}\r\n            onChange={onChangeEmail}\r\n          />\r\n        </Modal>\r\n      </FrameStyled>\r\n    </StyledBackground>\r\n  );\r\n};\r\n\r\nexport default InfoLayout;\r\n","import React from \"react\";\r\nimport MenuComponents from \"../components/MenuComponents\";\r\nimport InfoLayout from \"../components/InfoLayout\";\r\nimport PublicBtn from \"../components/PublicBtn\";\r\nimport { ScheduleContainer } from \"./schedule\";\r\n\r\nconst Info = () => {\r\n  return (\r\n    <ScheduleContainer>\r\n      <MenuComponents />\r\n      <InfoLayout />\r\n      <PublicBtn />\r\n    </ScheduleContainer>\r\n  );\r\n};\r\n\r\nexport default Info;\r\n","import \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Join from \"./pages/join\";\nimport Login from \"./pages/login\";\nimport PasswordFind from \"./pages/passwordFind\";\nimport Schedule from \"./pages/schedule\";\nimport Calendar from \"./pages/calendar\";\nimport Memory from \"./pages/memory\";\nimport Write from \"./pages/write\";\nimport Detail from \"./pages/detail\";\nimport PlanUpdate from \"./pages/planUpdate\";\nimport Info from \"./pages/info\";\nimport React from \"react\";\n\nconst App = () => {\n  return (\n    <>\n      {/* {logInDone && !logOutDone ? (\n        <Route path=\"/\" component={Schedule} exact={true} />\n      ) : (\n        <Route path=\"/\" component={Login} exact={true} />\n      )} */}\n      <Route path=\"/\" component={Schedule} exact={true} />\n      <Route path=\"/login\" component={Login} exact={true} />\n      <Route path=\"/join\" component={Join} exact={true} />\n      <Route path=\"/password\" component={PasswordFind} exact={true} />\n      <Route path=\"/calendar\" component={Calendar} exact />\n      <Route path=\"/calendar/:id\" component={PlanUpdate} exact />\n      <Route path=\"/memory\" component={Memory} exact />\n      <Switch>\n        <Route path=\"/memory/write\" component={Write} exact />\n        <Route path=\"/memory/:id\" component={Detail} exact />\n      </Switch>\n      <Route path=\"/info\" component={Info} exact />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const initialState = {\r\n  scheduleValue: true,\r\n  calendarValue: false,\r\n  memoryValue: false,\r\n};\r\n\r\nconst SCHEDULE_CLICK = \"SCHEDULE_CLICK\";\r\nconst CALENDAR_CLICK = \"CALENDAR_CLICK\";\r\nconst MEMORY_CLICK = \"MEMORY_CLICK\";\r\n\r\nexport const scheduleAction = {\r\n  type: SCHEDULE_CLICK,\r\n};\r\n\r\nexport const calendarAction = {\r\n  type: CALENDAR_CLICK,\r\n};\r\n\r\nexport const memoryAction = {\r\n  type: MEMORY_CLICK,\r\n};\r\n\r\nconst menu = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SCHEDULE_CLICK:\r\n      return {\r\n        ...state,\r\n        scheduleValue: true,\r\n        calendarValue: false,\r\n        memoryValue: false,\r\n      };\r\n    case CALENDAR_CLICK:\r\n      return {\r\n        ...state,\r\n        scheduleValue: false,\r\n        calendarValue: true,\r\n        memoryValue: false,\r\n      };\r\n    case MEMORY_CLICK:\r\n      return {\r\n        ...state,\r\n        scheduleValue: false,\r\n        calendarValue: true,\r\n        memoryValue: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default menu;\r\n","import { combineReducers } from \"redux\";\r\nimport user from \"./user\";\r\nimport plan from \"./plan\";\r\nimport menu from \"./menu\";\r\nimport post from \"./post\";\r\n\r\nconst rootReducer = combineReducers({\r\n  user,\r\n  plan,\r\n  menu,\r\n  post,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { all, fork, takeLatest, put, call } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport {\r\n  LOG_IN_REQUEST,\r\n  LOG_IN_SUCCESS,\r\n  LOG_IN_FAILURE,\r\n  LOG_OUT_REQUEST,\r\n  LOG_OUT_SUCCESS,\r\n  LOG_OUT_FAILURE,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  NICK_CHANGE_REQUEST,\r\n  NICK_CHANGE_SUCCESS,\r\n  NICK_CHANGE_FAILURE,\r\n  EMAIL_CHANGE_REQUEST,\r\n  EMAIL_CHANGE_SUCCESS,\r\n  EMAIL_CHANGE_FAILURE,\r\n  LOAD_MY_INFO_REQUEST,\r\n  LOAD_MY_INFO_SUCCESS,\r\n  LOAD_MY_INFO_FAILURE,\r\n} from \"../reducers/user\";\r\n\r\nfunction logInAPI(data) {\r\n  return axios.post(\"/user/login\", data);\r\n}\r\n\r\nfunction logOutAPI() {\r\n  return axios.post(\"/user/logout\");\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n  return axios.post(\"/user\", data);\r\n}\r\n\r\nfunction nickChangeAPI(data) {\r\n  return axios.patch(\"/user/nickname\", { nickname: data });\r\n}\r\n\r\nfunction emailChangeAPI(data) {\r\n  return axios.patch(\"/user/email\", { email: data });\r\n}\r\n\r\nfunction loadMyInfoAPI() {\r\n  return axios.get(\"/user\");\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    const result = yield call(logInAPI, action.data);\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* logOut() {\r\n  try {\r\n    yield call(logOutAPI);\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* signUp(action) {\r\n  try {\r\n    yield call(signUpAPI, action.data);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n      //data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* nickChagne(action) {\r\n  try {\r\n    const result = yield call(nickChangeAPI, action.data);\r\n    yield put({\r\n      type: NICK_CHANGE_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: NICK_CHANGE_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* emailChange(action) {\r\n  try {\r\n    const result = yield call(emailChangeAPI, action.data);\r\n    yield put({\r\n      type: EMAIL_CHANGE_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: EMAIL_CHANGE_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* loadMyInfo(action) {\r\n  try {\r\n    const result = yield call(loadMyInfoAPI, action.data);\r\n    yield put({\r\n      type: LOAD_MY_INFO_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_MY_INFO_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nfunction* watchNickChange() {\r\n  yield takeLatest(NICK_CHANGE_REQUEST, nickChagne);\r\n}\r\n\r\nfunction* watchEmailChange() {\r\n  yield takeLatest(EMAIL_CHANGE_REQUEST, emailChange);\r\n}\r\n\r\nfunction* watchLoadMyInfo() {\r\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLogIn),\r\n    fork(watchLogOut),\r\n    fork(watchSignUp),\r\n    fork(watchNickChange),\r\n    fork(watchEmailChange),\r\n    fork(watchLoadMyInfo),\r\n  ]);\r\n}\r\n","import { all, fork, put, takeLatest, call } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport {\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n  ADD_POST_FAILURE,\r\n  REMOVE_POST_REQUEST,\r\n  REMOVE_POST_SUCCESS,\r\n  REMOVE_POST_FAILURE,\r\n  LOAD_POST_REQUEST,\r\n  LOAD_POST_SUCCESS,\r\n  LOAD_POST_FAILURE,\r\n  UPLOAD_IMAGES_REQUEST,\r\n  UPLOAD_IMAGES_FAILURE,\r\n  UPLOAD_IMAGES_SUCCESS,\r\n} from \"../reducers/post\";\r\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\r\n\r\nfunction addPostAPI(data) {\r\n  return axios.post(\"/post\", data);\r\n}\r\n\r\nfunction removeAPI(data) {\r\n  return axios.delete(`/post/${data}`);\r\n}\r\n\r\nfunction loadPostAPI(lastId) {\r\n  return axios.get(`/posts?lastId=${lastId || 0}`);\r\n}\r\n\r\nfunction uploadImagesAPI(data) {\r\n  return axios.post(\"/post/images\", data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    const result = yield call(addPostAPI, action.data);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    yield put({\r\n      type: ADD_POST_TO_ME,\r\n      data: result.data.id,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* removePost(action) {\r\n  try {\r\n    const result = yield call(removeAPI, action.data);\r\n    yield put({\r\n      type: REMOVE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    yield put({\r\n      type: REMOVE_POST_OF_ME,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: REMOVE_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* loadPost(action) {\r\n  try {\r\n    const result = yield call(loadPostAPI, action.lastId);\r\n    yield put({\r\n      type: LOAD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* uploadImages(action) {\r\n  try {\r\n    const result = yield call(uploadImagesAPI, action.data);\r\n    console.log(result.data);\r\n    yield put({\r\n      type: UPLOAD_IMAGES_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put({\r\n      type: UPLOAD_IMAGES_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchRemovePost() {\r\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\n\r\nfunction* watchLoadPost() {\r\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\r\n}\r\n\r\nfunction* watchUploadImages() {\r\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchAddPost),\r\n    fork(watchRemovePost),\r\n    fork(watchLoadPost),\r\n    fork(watchUploadImages),\r\n  ]);\r\n}\r\n","import { all, fork, put, takeLatest, call } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport {\r\n  ADD_PLAN_REQUEST,\r\n  ADD_PLAN_SUCCESS,\r\n  ADD_PLAN_FAILURE,\r\n  UPDATE_PLAN_REQUEST,\r\n  UPDATE_PLAN_SUCCESS,\r\n  UPDATE_PLAN_FAILURE,\r\n  REMOVE_PLAN_REQUEST,\r\n  REMOVE_PLAN_SUCCESS,\r\n  REMOVE_PLAN_FAILURE,\r\n  DONE_PLAN_REQUEST,\r\n  DONE_PLAN_SUCCESS,\r\n  DONE_PLAN_FAILURE,\r\n  LOAD_PLAN_REQUEST,\r\n  LOAD_PLAN_SUCCESS,\r\n  LOAD_PLAN_FAILURE,\r\n} from \"../reducers/plan\";\r\n\r\nfunction addPlanAPI(data) {\r\n  return axios.post(\"/plan\", data);\r\n}\r\n\r\nfunction updatePlanAPI(data) {\r\n  return axios.patch(`/plan/${data.id}`, data);\r\n}\r\n\r\nfunction removePlanAPI(data) {\r\n  return axios.delete(`/plan/${data}`);\r\n}\r\n\r\nfunction donePlanAPI(data) {\r\n  return axios.patch(`/plan/done/${data}`, data);\r\n}\r\n\r\nfunction loadPlanAPI() {\r\n  return axios.get(\"/plan/load\");\r\n}\r\n\r\nfunction* addPlan(action) {\r\n  try {\r\n    const result = yield call(addPlanAPI, action.data);\r\n    yield put({\r\n      type: ADD_PLAN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_PLAN_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* updatePlan(action) {\r\n  try {\r\n    const result = yield call(updatePlanAPI, action.data);\r\n    yield put({\r\n      type: UPDATE_PLAN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: UPDATE_PLAN_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* removePlan(action) {\r\n  try {\r\n    const result = yield call(removePlanAPI, action.id);\r\n    yield put({\r\n      type: REMOVE_PLAN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: REMOVE_PLAN_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* donePlan(action) {\r\n  try {\r\n    const reuslt = yield call(donePlanAPI, action.id);\r\n    yield put({\r\n      type: DONE_PLAN_SUCCESS,\r\n      data: reuslt.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: DONE_PLAN_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* loadPlan(action) {\r\n  try {\r\n    const result = yield call(loadPlanAPI);\r\n    yield put({\r\n      type: LOAD_PLAN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_PLAN_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPlan() {\r\n  yield takeLatest(ADD_PLAN_REQUEST, addPlan);\r\n}\r\n\r\nfunction* watchUpdatePlan() {\r\n  yield takeLatest(UPDATE_PLAN_REQUEST, updatePlan);\r\n}\r\n\r\nfunction* watchRemovePlan() {\r\n  yield takeLatest(REMOVE_PLAN_REQUEST, removePlan);\r\n}\r\n\r\nfunction* watchDonePlan() {\r\n  yield takeLatest(DONE_PLAN_REQUEST, donePlan);\r\n}\r\n\r\nfunction* watchLoadPlan() {\r\n  yield takeLatest(LOAD_PLAN_REQUEST, loadPlan);\r\n}\r\n\r\nexport default function* planSaga() {\r\n  yield all([\r\n    fork(watchAddPlan),\r\n    fork(watchUpdatePlan),\r\n    fork(watchDonePlan),\r\n    fork(watchRemovePlan),\r\n    fork(watchLoadPlan),\r\n  ]);\r\n}\r\n","import { all, fork } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport userSaga from \"./user\";\r\nimport postSaga from \"./post\";\r\nimport planSaga from \"./plan\";\r\n\r\n//axios.defaults.baseURL = \"https://treback.herokuapp.com/\";\r\n//axios.defaults.baseURL = \"http://localhost:3065/\";\r\naxios.defaults.withCredentials = true;\r\n\r\nexport default function* rootSaga() {\r\n  yield all([fork(userSaga), fork(postSaga), fork(planSaga)]);\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers/index\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./sagas/index\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}